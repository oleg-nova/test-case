# Encrypting the second disk in the system (disk without root partition).
# Partition name specified in the inventory.yml
---
- name: Ensure cryptsetup is installed
  ansible.builtin.apt:
    name: cryptsetup
    state: present

- name: Check if the partition exists
  ansible.builtin.stat:
    path: "{{ disk_to_encrypt_name }}"
  register: partition_stat

- name: Fail if the partition does not exist
  ansible.builtin.fail:
    msg: "The specified partition {{ disk_to_encrypt_name }} does not exist."
  when: not partition_stat.stat.exists

- name: Create LUKS keyfile
  ansible.builtin.command: dd if=/dev/urandom of=/etc/luks_keyfile bs=512 count=4
  register: keyfile_creation
  changed_when: keyfile_creation.rc == 0
  failed_when: keyfile_creation.rc != 0

- name: Encrypt the partition using LUKS
  community.crypto.luks_device:
    device: "{{ disk_to_encrypt_name }}"
    state: present
    keyfile: /etc/luks_keyfile
  when: partition_stat.stat.exists
  register: encrypt_result
  notify:
    - Check if encryption was successful
  changed_when: encrypt_result.changed
  failed_when: encrypt_result.failed

- name: Open the encrypted partition
  community.crypto.luks_device:
    device: "{{ disk_to_encrypt_name }}"
    state: opened
    keyfile: /etc/luks_keyfile
  when: partition_stat.stat.exists
  register: open_result
  notify:
    - Check if opening the encrypted partition was successful
  changed_when: open_result.changed
  failed_when: open_result.failed

- name: Display LUKS device
  ansible.builtin.debug:
    msg: "LUKS device: {{ open_result.name }}"

- name: Create filesystem on the encrypted partition
  community.general.filesystem:
    fstype: ext4
    dev: /dev/mapper/{{ open_result.name }}
  register: fs_result
  notify:
    - Check if filesystem creation was successful
